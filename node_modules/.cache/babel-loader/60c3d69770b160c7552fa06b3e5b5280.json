{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = exports.Method = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _LoginStatus = _interopRequireDefault(require(\"./constants/LoginStatus\"));\n\nvar Method = {\n  GET: 'get',\n  POST: 'post',\n  DELETE: 'delete'\n};\nexports.Method = Method;\n\nvar Facebook = /*#__PURE__*/function () {\n  function Facebook(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.options = (0, _extends2[\"default\"])({\n      domain: 'connect.facebook.net',\n      version: 'v3.2',\n      cookie: false,\n      status: false,\n      xfbml: false,\n      language: 'en_US',\n      frictionlessRequests: false,\n      debug: false,\n      chatSupport: false\n    }, options);\n\n    if (!this.options.appId) {\n      throw new Error('You need to set appId');\n    }\n\n    if (!this.options.wait) {\n      this.init();\n    }\n  }\n\n  var _proto = Facebook.prototype;\n\n  _proto.getAppId = function getAppId() {\n    return this.options.appId;\n  };\n\n  _proto.init = function init() {\n    var _this = this;\n\n    return _regenerator[\"default\"].async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!this.loadingPromise) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", this.loadingPromise);\n\n          case 2:\n            this.loadingPromise = new Promise(function (resolve) {\n              var _this$options = _this.options,\n                  domain = _this$options.domain,\n                  language = _this$options.language,\n                  debug = _this$options.debug,\n                  chatSupport = _this$options.chatSupport,\n                  restOptions = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$options, [\"domain\", \"language\", \"debug\", \"chatSupport\"]);\n\n              window.fbAsyncInit = function () {\n                window.FB.init({\n                  appId: restOptions.appId,\n                  version: restOptions.version,\n                  cookie: restOptions.cookie,\n                  status: restOptions.status,\n                  xfbml: restOptions.xfbml,\n                  frictionlessRequests: _this.frictionlessRequests\n                });\n                resolve(window.FB);\n              };\n\n              if (window.document.getElementById('facebook-jssdk')) {\n                return resolve(window.FB);\n              }\n\n              var js = window.document.createElement('script');\n              js.id = 'facebook-jssdk';\n              js.async = true;\n              js.defer = true;\n              js.src = \"https://\" + domain + \"/\" + language + \"/sdk\" + (chatSupport ? '/xfbml.customerchat' : '') + (debug ? '/debug' : '') + \".js\";\n              window.document.body.appendChild(js);\n            });\n            return _context.abrupt(\"return\", this.loadingPromise);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.process = function process(method, before, after) {\n    var fb;\n    return _regenerator[\"default\"].async(function process$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (before === void 0) {\n              before = [];\n            }\n\n            if (after === void 0) {\n              after = [];\n            }\n\n            _context2.next = 4;\n            return _regenerator[\"default\"].awrap(this.init());\n\n          case 4:\n            fb = _context2.sent;\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fb[method].apply(fb, before.concat([function (response) {\n                if (!response) {\n                  if (method === 'ui') return;\n                  reject(new Error('Response is undefined'));\n                } else if (response.error) {\n                  var _response$error = response.error,\n                      code = _response$error.code,\n                      type = _response$error.type,\n                      message = _response$error.message;\n                  var error = new Error(message);\n                  error.code = code;\n                  error.type = type;\n                  reject(error);\n                } else {\n                  resolve(response);\n                }\n              }], after));\n            }));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.ui = function ui(options) {\n    return _regenerator[\"default\"].async(function ui$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", this.process('ui', [options]));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.api = function api(path, method, params) {\n    return _regenerator[\"default\"].async(function api$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (method === void 0) {\n              method = Method.GET;\n            }\n\n            if (params === void 0) {\n              params = {};\n            }\n\n            return _context4.abrupt(\"return\", this.process('api', [path, method, params]));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.login = function login(opts) {\n    return _regenerator[\"default\"].async(function login$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (opts === void 0) {\n              opts = null;\n            }\n\n            return _context5.abrupt(\"return\", this.process('login', [], [opts]));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.logout = function logout() {\n    return _regenerator[\"default\"].async(function logout$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", this.process('logout'));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getLoginStatus = function getLoginStatus() {\n    return _regenerator[\"default\"].async(function getLoginStatus$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", this.process('getLoginStatus'));\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getAuthResponse = function getAuthResponse() {\n    return _regenerator[\"default\"].async(function getAuthResponse$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", this.process('getAuthResponse'));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getTokenDetail = function getTokenDetail(loginResponse) {\n    var response;\n    return _regenerator[\"default\"].async(function getTokenDetail$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (!(loginResponse.status === _LoginStatus[\"default\"].CONNECTED && loginResponse.authResponse)) {\n              _context9.next = 2;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", loginResponse.authResponse);\n\n          case 2:\n            _context9.next = 4;\n            return _regenerator[\"default\"].awrap(this.getLoginStatus());\n\n          case 4:\n            response = _context9.sent;\n\n            if (!(response.status === _LoginStatus[\"default\"].CONNECTED && response.authResponse)) {\n              _context9.next = 7;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", response.authResponse);\n\n          case 7:\n            throw new Error('Token is undefined');\n\n          case 8:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getProfile = function getProfile(params) {\n    return _regenerator[\"default\"].async(function getProfile$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            return _context10.abrupt(\"return\", this.api('/me', Method.GET, params));\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getTokenDetailWithProfile = function getTokenDetailWithProfile(params, response) {\n    var tokenDetail, profile;\n    return _regenerator[\"default\"].async(function getTokenDetailWithProfile$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return _regenerator[\"default\"].awrap(this.getTokenDetail(response));\n\n          case 2:\n            tokenDetail = _context11.sent;\n            _context11.next = 5;\n            return _regenerator[\"default\"].awrap(this.getProfile(params));\n\n          case 5:\n            profile = _context11.sent;\n            return _context11.abrupt(\"return\", {\n              profile: profile,\n              tokenDetail: tokenDetail\n            });\n\n          case 7:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getToken = function getToken() {\n    var authResponse;\n    return _regenerator[\"default\"].async(function getToken$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return _regenerator[\"default\"].awrap(this.getTokenDetail());\n\n          case 2:\n            authResponse = _context12.sent;\n            return _context12.abrupt(\"return\", authResponse.accessToken);\n\n          case 4:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getUserId = function getUserId() {\n    var authResponse;\n    return _regenerator[\"default\"].async(function getUserId$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return _regenerator[\"default\"].awrap(this.getTokenDetail());\n\n          case 2:\n            authResponse = _context13.sent;\n            return _context13.abrupt(\"return\", authResponse.userID);\n\n          case 4:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.sendInvite = function sendInvite(to, options) {\n    return _regenerator[\"default\"].async(function sendInvite$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            return _context14.abrupt(\"return\", this.ui((0, _extends2[\"default\"])({\n              to: to,\n              method: 'apprequests'\n            }, options)));\n\n          case 1:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.postAction = function postAction(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {\n    var url;\n    return _regenerator[\"default\"].async(function postAction$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            url = \"/me/\" + ogNamespace + \":\" + ogAction + \"?\" + ogObject + \"=\" + encodeURIComponent(ogObjectUrl);\n\n            if (noFeedStory === true) {\n              url += '&no_feed_story=true';\n            }\n\n            return _context15.abrupt(\"return\", this.api(url, Method.POST));\n\n          case 3:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getPermissions = function getPermissions() {\n    var response;\n    return _regenerator[\"default\"].async(function getPermissions$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _context16.next = 2;\n            return _regenerator[\"default\"].awrap(this.api('/me/permissions'));\n\n          case 2:\n            response = _context16.sent;\n            return _context16.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.hasPermissions = function hasPermissions(permissions) {\n    var usersPermissions, findedPermissions;\n    return _regenerator[\"default\"].async(function hasPermissions$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _context17.next = 2;\n            return _regenerator[\"default\"].awrap(this.getPermissions());\n\n          case 2:\n            usersPermissions = _context17.sent;\n            findedPermissions = permissions.filter(function (p) {\n              var currentPermission = usersPermissions.find(function (row) {\n                var permission = row.permission,\n                    status = row.status;\n                return status === 'granted' && permission === p;\n              });\n              return !!currentPermission;\n            });\n            return _context17.abrupt(\"return\", findedPermissions.length === permissions.length);\n\n          case 5:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.subscribe = function subscribe(eventName, callback) {\n    var fb;\n    return _regenerator[\"default\"].async(function subscribe$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return _regenerator[\"default\"].awrap(this.init());\n\n          case 2:\n            fb = _context18.sent;\n            fb.Event.subscribe(eventName, callback);\n\n          case 4:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.unsubscribe = function unsubscribe(eventName, callback) {\n    var fb;\n    return _regenerator[\"default\"].async(function unsubscribe$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return _regenerator[\"default\"].awrap(this.init());\n\n          case 2:\n            fb = _context19.sent;\n            fb.Event.unsubscribe(eventName, callback);\n\n          case 4:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.parse = function parse(parentNode) {\n    var fb;\n    return _regenerator[\"default\"].async(function parse$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.next = 2;\n            return _regenerator[\"default\"].awrap(this.init());\n\n          case 2:\n            fb = _context20.sent;\n\n            if (typeof parentNode === 'undefined') {\n              fb.XFBML.parse();\n            } else {\n              fb.XFBML.parse(parentNode);\n            }\n\n          case 4:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getRequests = function getRequests() {\n    return _regenerator[\"default\"].async(function getRequests$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            return _context21.abrupt(\"return\", this.api('/me/apprequests'));\n\n          case 1:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.removeRequest = function removeRequest(requestID) {\n    return _regenerator[\"default\"].async(function removeRequest$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            return _context22.abrupt(\"return\", this.api(requestID, Method.DELETE));\n\n          case 1:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.setAutoGrow = function setAutoGrow() {\n    var fb;\n    return _regenerator[\"default\"].async(function setAutoGrow$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            _context23.next = 2;\n            return _regenerator[\"default\"].awrap(this.init());\n\n          case 2:\n            fb = _context23.sent;\n            fb.Canvas.setAutoGrow();\n\n          case 4:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.paySimple = function paySimple(product, quantity) {\n    return _regenerator[\"default\"].async(function paySimple$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            if (quantity === void 0) {\n              quantity = 1;\n            }\n\n            return _context24.abrupt(\"return\", this.ui({\n              method: 'pay',\n              action: 'purchaseitem',\n              product: product,\n              quantity: quantity\n            }));\n\n          case 2:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.pay = function pay(product, options) {\n    return _regenerator[\"default\"].async(function pay$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            return _context25.abrupt(\"return\", this.ui((0, _extends2[\"default\"])({\n              method: 'pay',\n              action: 'purchaseitem',\n              product: product\n            }, options)));\n\n          case 1:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  return Facebook;\n}();\n/*\n  sendToFriends: function(options, callback) {\n    if(!options) {\n      options = {};\n    }\n\n    options.method = 'send';\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        method: 'stream.publish',\n        message: message,\n        attachment: {\n          name: name,\n          caption: caption,\n          description: description,\n          href: url,\n          media:[{\n            type: 'image',\n            src:  imgUrl,\n            href: url\n          }]\n        },\n        action_links: [{\n          text: 'Code',\n          href: url\n        }],\n        user_prompt_message: message\n      },\n      function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendInviteForm: function(options, callback) {\n    if(typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method = options.method || 'apprequests';\n\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  checkPageLike: function(pageID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      fbApi.getUserID(function(err, userID) {\n        if(err) {\n          return callback(err);\n        }\n\n        var fqlQuery = `SELECT uid FROM page_fan WHERE page_id = ${pageID} and uid = ${userID}`;\n        var query = FB.Data.query(fqlQuery);\n\n        query.wait(function(rows) {\n          if (rows.length === 1 && rows[0].uid === userID) {\n            callback(null, true, query);\n          }\n          else {\n            callback(null, false, query);\n          }\n        });\n      });\n    });\n  },\n\n  sendMessageToFriend: function (friendID, link, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        to: friendID,\n        method: 'send',\n        link: link\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  _prepareUsers: function(data) {\n    var users=[];\n\n    for(var index in data) {\n      var userData=data[index];\n\n      var user = {\n        provider_uid: 'facebook'+'_'+userData.uid,\n        provider: 'facebook',\n        id: userData.uid,\n        name: userData.name,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        status: (userData.status!==null) ? userData.status : null,\n        image: '//graph.facebook.com/'+userData.uid+'/picture?'\n      };\n\n      users.push(user);\n    }\n\n    return users;\n  },\n\n  getUserList: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('fql', {\n        q: `\n          SELECT uid, name, first_name, last_name, online_presence, status\n          FROM user\n          WHERE uid IN\n            ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name\n        `,\n      }, function (response)\n      {\n        var users = fbApi._prepareUsers(response.data);\n        callback(null, users, response);\n      });\n    });\n  },\n\n  postFeed: function(options, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method='feed';\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  createAlbum: function(name, description, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', 'post', {\n        name: name,\n        description: description\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  addImageToAlbum: function(albumID, imageURL, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', 'post', {\n        message: message,\n        url: imageURL\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbums: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumPhotos: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumCoverPicture: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/picture', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'publish_stream'\n  postPhoto: function(photoUrl, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/photos', 'post', {\n        message: message,\n        url: photoUrl\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  getPageInfo: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.Canvas.getPageInfo(function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  }\n*/\n\n\nexports[\"default\"] = Facebook;","map":null,"metadata":{},"sourceType":"script"}