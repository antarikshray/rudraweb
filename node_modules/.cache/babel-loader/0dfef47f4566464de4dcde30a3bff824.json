{"ast":null,"code":"import _slicedToArray from \"/home/antariksh/Rudra/git_repo/rudrawebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/antariksh/Rudra/git_repo/rudrawebsite/src/views/Components/Sections/SectionTimeline.js\";\nimport React, { useState } from \"react\";\nimport HorizontalTimeline from 'react-horizontal-timeline';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport SectionMediaCard from \"./SectionAchievement.js\";\nimport Arrowd from \"@material-ui/icons/ArrowDropDown\";\nimport \"assets/css/my.css\";\nvar VALUES = ['May 28 2013', 'May 31 2014', 'May 31 2015', 'May 30 2016', 'May 30 2017', 'May 31 2019', 'Jan 17 2020'];\nvar pallete = [];\nvar useStyles = makeStyles(function () {\n  return {\n    '@media (max-width: 800px)': {\n      card: {\n        width: '90vw',\n        height: '73vh'\n      }\n    },\n    '@media (min-width: 800px)': {\n      container: {\n        height: '90vh'\n      },\n      card: {\n        marginTop: '15vh',\n        width: '60vw',\n        height: '75vh',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      downvote: {\n        position: 'absolute',\n        marginLeft: '49vw',\n        marginTop: '90vh',\n        height: '50px',\n        width: '50px',\n        zIndex: '10000'\n      },\n      arrow: {\n        width: \"100px\",\n        height: \"100px\",\n        transition: '1s',\n        color: '#787276'\n      }\n    }\n  };\n});\nexport default function SectionTimeline() {\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      previous = _useState4[0],\n      setPrevious = _useState4[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.downvote,\n    to: \"gallery\",\n    spy: true,\n    smooth: true,\n    offset: 120,\n    duration: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Arrowd, {\n    id: \"achi\",\n    className: classes.arrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HorizontalTimeline, {\n    index: value,\n    indexClick: function indexClick(index) {\n      setValue(index);\n      setPrevious(value);\n    },\n    values: VALUES,\n    labelWidth: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SectionMediaCard, {\n    index: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/antariksh/Rudra/git_repo/rudrawebsite/src/views/Components/Sections/SectionTimeline.js"],"names":["React","useState","HorizontalTimeline","makeStyles","Link","animateScroll","scroll","SectionMediaCard","Arrowd","VALUES","pallete","useStyles","card","width","height","container","marginTop","marginLeft","marginRight","downvote","position","zIndex","arrow","transition","color","SectionTimeline","classes","value","setValue","previous","setPrevious","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport HorizontalTimeline from 'react-horizontal-timeline';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\n\nimport SectionMediaCard from \"./SectionAchievement.js\";\nimport Arrowd from \"@material-ui/icons/ArrowDropDown\";\n\nimport \"assets/css/my.css\";\n\nconst VALUES = ['May 28 2013', 'May 31 2014', 'May 31 2015', 'May 30 2016', 'May 30 2017', 'May 31 2019', 'Jan 17 2020'];\nconst pallete = [];\n\nconst useStyles = makeStyles(() => ({\n  '@media (max-width: 800px)': {\n    card:{\n      width: '90vw',   \n      height: '73vh', \n    }\n  },\n\n  '@media (min-width: 800px)': {\n    container: {\n      height: '90vh',\n    },\n\n    card:{\n      marginTop: '15vh',\n      width: '60vw', \n      height: '75vh',  \n      marginLeft: 'auto', \n      marginRight: 'auto',\n    },\n    downvote: {\n      position: 'absolute',\n      marginLeft: '49vw',\n      marginTop: '90vh',\n      height: '50px',\n      width: '50px',\n      zIndex: '10000',\n  },\n  arrow: {\n      width: \"100px\",\n      height: \"100px\",\n      transition: '1s',\n      color: '#787276',\n  },\n  }\n\n}));\n\nexport default function SectionTimeline() {\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const [previous, setPrevious] = useState(0);\n    return(<div>\n      <div className={classes.container}>\n        <Link className={classes.downvote}\n                    to=\"gallery\"\n                    spy={true}\n                    smooth={true}\n                    offset={120}\n                    duration= {1000} >\n            <Arrowd id='achi' className={classes.arrow} />\n        </Link>\n        <div className={classes.card}>\n            <HorizontalTimeline\n              index={value}\n              indexClick={(index) => {\n                  setValue(index); \n                  setPrevious(value);\n              }}\n              values={ VALUES } \n              labelWidth={100}\n              />\n              <SectionMediaCard index={value}/>\n        </div>      \n      </div>\n      </div>);\n}"]},"metadata":{},"sourceType":"module"}